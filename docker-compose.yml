version: '3.8'

services:
  # DevOps管理平台主服务
  devops-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-devops
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./config:/app/config
    environment:
      - ENVIRONMENT=production
      - PORT=8080
      - DATABASE_URL=/app/data/devops.db
      - JWT_SECRET=${JWT_SECRET:-your-production-secret-key}
      - LOG_TO_FILE=true
      - LOG_LEVEL=info
    networks:
      - devops-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: devops-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - devops-network
    profiles:
      - with-redis

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: devops-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - devops-server
    networks:
      - devops-network
    profiles:
      - with-nginx

volumes:
  redis-data:
    driver: local

networks:
  devops-network:
    driver: bridge
